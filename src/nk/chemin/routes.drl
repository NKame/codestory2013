package codestory2013;

import nk.chemin.DecisionRoutage;
import nk.chemin.Parametre;
import nk.enonces.Monnayeur
import nk.questions.antlr.ArithmetiqueLexer;
import nk.questions.antlr.ArithmetiqueParser;
import nk.questions.antlr.ArithmetiqueCalc;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.tree.CommonTree;
import org.antlr.runtime.tree.CommonTreeNodeStream;

rule "PremiereQuestion"
when 
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur == "Quelle est ton adresse email")
then
	$dr.resoudStatique("mail.txt");
	update($dr);
end

rule "Abonnement ML"
when
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur == "Es tu abonne a la mailing list(OUI/NON)")
then
	$dr.resoudStatique("OUI.txt");
	update($dr);
end

rule "Bonheur"
when
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur == "Es tu heureux de participer(OUI/NON)")
then
	$dr.resoudStatique("OUI.txt");
	update($dr);
end

rule "Vas-y balance ton MarkDown"
when
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur == "Es tu pret a recevoir une enonce au format markdown par http post(OUI/NON)")
then
	$dr.resoudStatique("OUI.txt");
	update($dr);
end

rule "Gestion enonces"
when
	$dr : DecisionRoutage(decide == false, path matches "/enonce/[0-9]+")
then
	$dr.chain();
	$dr.addParamContexte("id", Integer.parseInt($dr.getPath().substring($dr.getPath().lastIndexOf("/") + 1), 10));
	update($dr);
end	

rule "Enonce 1 recu"
when
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur == "As tu bien recu le premier enonce(OUI/NON)")
then
	$dr.resoudStatique("OUI.txt");
	update($dr);
end 

rule "Enonce 1"
when
	$dr: DecisionRoutage(decide == false, path matches "/scalaskel/change/[0-9]+")
then
	/* je sais, c'est monstrueux */
	Monnayeur m = new Monnayeur();
	$dr.jsonDirect(m.faitLaMonnaie(Integer.parseInt($dr.getPath().substring($dr.getPath().lastIndexOf("/") + 1), 10)));
	update($dr);
end

rule "Arithmetique"
when
	$dr : DecisionRoutage(decide == false, queryString matches "q=[0-9()+/*-]+") 
then
	String valeur = $dr.getQueryString();
	ANTLRStringStream input = new ANTLRStringStream(valeur.substring(2));
	ArithmetiqueLexer lexer = new ArithmetiqueLexer(input);
	CommonTokenStream tokens = new CommonTokenStream(lexer);
	ArithmetiqueParser parser = new ArithmetiqueParser(tokens);
	CommonTree t = (CommonTree) parser.prog().getTree();

	CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
	ArithmetiqueCalc evaluator = new ArithmetiqueCalc(nodes);
	String result = String.valueOf(evaluator.prog());
	if(result.endsWith(".0")) {
		result = result.substring(0, result.length() - 2);
	}
	$dr.renvoieChaine(result);
	update($dr);
end

rule "Question inconnue"
salience -1
when
	$dr : DecisionRoutage(decide == false)
	Parametre(nom == "q", valeur matches ".*\\(OUI/NON\\)")
then
	$dr.resoudStatique("NON.txt");
	update($dr);
end

rule "Favicon"
/* ce serait dommage de la capturer */
when 
	$dr : DecisionRoutage(decide == false, path == "/favicon.ico")
then
	$dr.redirectPermanent("http://www.cynicalturtle.net/kame/themes/kbloggo/css/turtle.gif");
	update($dr);
end

rule "Assistance"
/* tout ce qui est /assistance, on traite en interne */
when
	$dr : DecisionRoutage(decide == false, path matches "/assistance/.*")
then
	$dr.chain();
	update($dr);
end	

rule "Requete inconnue"
salience -100
when
	$dr : DecisionRoutage(decide == false)
then
	$dr.resoudDynamique('/assistance/capture');
	update($dr)
end